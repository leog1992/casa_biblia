/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Clases.Cl_Categoria;
import Clases.Cl_Conectar;
import Clases.Cl_Familia;
import Clases.Cl_Medidas;
import Clases.Cl_Productos;
import Clases.Cl_Varios;
import Clases.FTPUploader;
import Vistas.frm_ver_mis_productos;
import Vistas.frm_ver_todo_productos;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import casa_biblia.frm_menu;
import nicon.notify.core.Notification;

/**
 *
 * @author pc
 */
public class frm_reg_productos extends javax.swing.JInternalFrame {

    Cl_Varios ven = new Cl_Varios();
    Cl_Conectar con = new Cl_Conectar();
    public static Cl_Productos pro = new Cl_Productos();
    Cl_Medidas med = new Cl_Medidas();
    Cl_Familia fam = new Cl_Familia();
    Cl_Categoria cat = new Cl_Categoria();
    public static String origen = "";
    public static String accion = null;
    public static Integer id = null;
    public static String tipo = null;
    FTPUploader ftpUploader;
    String filename = "noimage.jpg";
    String name = "noimage.jpg";

    /**
     * Creates new form frm_reg_productos
     */
    public frm_reg_productos() {
        initComponents();

        med.ver_medidas(cbx_und);
        fam.ver_familia(cbx_familia);

        //iniciar FTP
        /*try {
         this.ftpUploader = new FTPUploader();
         } catch (Exception ex) {
         System.out.print("FTP: Error " + ex);
         JOptionPane.showMessageDialog(null, "FTP: Error " + ex);
         }*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_des = new javax.swing.JTextField();
        txt_cant_min = new javax.swing.JTextField();
        cbx_und = new javax.swing.JComboBox();
        txt_pcom = new javax.swing.JTextField();
        txt_pven = new javax.swing.JTextField();
        btn_cerrar = new javax.swing.JButton();
        btn_reg = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_caract = new javax.swing.JTextArea();
        j_img = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txt_gan = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cbx_tipo = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        txt_ubicacion = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txt_cant_caja = new javax.swing.JTextField();
        lbl_imagen = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txt_cant_max = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        cbx_familia = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        cbx_categoria = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        cbx_afecto = new javax.swing.JComboBox();
        txt_codigo_externo = new javax.swing.JTextField();

        setTitle("Registrar Productos");

        jLabel2.setText("Descripcion");

        jLabel6.setText("Cantidad Minima:");

        jLabel7.setText("Costo de Compra:");

        jLabel8.setText("Precio de Venta:");

        jLabel9.setText("Unidad de Medida:");

        txt_des.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_desKeyPressed(evt);
            }
        });

        txt_cant_min.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_cant_min.setText("0.00");
        txt_cant_min.setEnabled(false);
        txt_cant_min.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_cant_minKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_cant_minKeyTyped(evt);
            }
        });

        cbx_und.setEnabled(false);
        cbx_und.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbx_undKeyPressed(evt);
            }
        });

        txt_pcom.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_pcom.setText("0.00");
        txt_pcom.setEnabled(false);
        txt_pcom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_pcomKeyPressed(evt);
            }
        });

        txt_pven.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_pven.setEnabled(false);
        txt_pven.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_pvenKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_pvenKeyTyped(evt);
            }
        });

        btn_cerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/cancel.png"))); // NOI18N
        btn_cerrar.setText("Cerrar");
        btn_cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cerrarActionPerformed(evt);
            }
        });

        btn_reg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/add.png"))); // NOI18N
        btn_reg.setText("Registrar");
        btn_reg.setEnabled(false);
        btn_reg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_regActionPerformed(evt);
            }
        });
        btn_reg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btn_regKeyPressed(evt);
            }
        });

        jLabel11.setText("Caracteristicas");

        txt_caract.setColumns(20);
        txt_caract.setForeground(new java.awt.Color(0, 0, 153));
        txt_caract.setRows(5);
        txt_caract.setEnabled(false);
        txt_caract.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_caractKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(txt_caract);

        j_img.setBackground(new java.awt.Color(204, 204, 204));
        j_img.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        j_img.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                j_imgMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout j_imgLayout = new javax.swing.GroupLayout(j_img);
        j_img.setLayout(j_imgLayout);
        j_imgLayout.setHorizontalGroup(
            j_imgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        j_imgLayout.setVerticalGroup(
            j_imgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 208, Short.MAX_VALUE)
        );

        jLabel12.setText("Ganancia:");

        txt_gan.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_gan.setText("0.00");
        txt_gan.setEnabled(false);

        jLabel13.setText("Tipo Producto:");

        cbx_tipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BIEN", "SERVICIO" }));
        cbx_tipo.setEnabled(false);
        cbx_tipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbx_tipoKeyPressed(evt);
            }
        });

        jLabel10.setText("Ubicacion");

        txt_ubicacion.setEnabled(false);
        txt_ubicacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_ubicacionKeyPressed(evt);
            }
        });

        jLabel16.setText("ver Plano");

        jLabel17.setText("Cant. Caja Compra:");

        txt_cant_caja.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_cant_caja.setText("1.00");
        txt_cant_caja.setEnabled(false);
        txt_cant_caja.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_cant_cajaKeyPressed(evt);
            }
        });

        lbl_imagen.setText("nombre imagen");

        jLabel18.setText("Cantidad Maxima:");

        txt_cant_max.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_cant_max.setText("0.00");
        txt_cant_max.setEnabled(false);
        txt_cant_max.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_cant_maxKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_cant_maxKeyTyped(evt);
            }
        });

        jLabel19.setText("Familia Producto:");

        cbx_familia.setEnabled(false);
        cbx_familia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbx_familiaKeyPressed(evt);
            }
        });

        jLabel20.setText("Sub Categoria");

        cbx_categoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECCIONAR FAMILIA" }));
        cbx_categoria.setEnabled(false);
        cbx_categoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbx_categoriaKeyPressed(evt);
            }
        });

        jLabel21.setText("Afecto a IGV?");

        cbx_afecto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NO", "SI" }));
        cbx_afecto.setEnabled(false);
        cbx_afecto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbx_afectoKeyPressed(evt);
            }
        });

        txt_codigo_externo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_codigo_externo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_codigo_externoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel11))
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addComponent(jLabel19)
                        .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(btn_reg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_cant_max, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_cant_min, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txt_ubicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel16))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txt_gan, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel8))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(cbx_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(cbx_familia, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(70, 70, 70)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel20)
                                                .addComponent(jLabel21)))
                                        .addComponent(jLabel17)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel7)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbx_categoria, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbx_afecto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_cant_caja, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbx_und, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pcom, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pven, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_imagen)
                                .addGap(0, 106, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btn_cerrar))
                            .addComponent(j_img, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_des, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_codigo_externo)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_des, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_codigo_externo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cbx_afecto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbx_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbx_familia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbx_categoria, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(txt_cant_caja, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_ubicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cbx_und, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_cant_min, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_cant_max, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_pcom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txt_gan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_pven, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(lbl_imagen))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_reg, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addComponent(j_img, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(143, 143, 143))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cerrarActionPerformed
        if (origen.equals("todo_productos")) {
            frm_ver_todo_productos productos = new frm_ver_todo_productos();
            ven.llamar_ventana(productos);
        }
        if (origen.equals("mis_productos")) {
            frm_ver_mis_productos productos = new frm_ver_mis_productos();
            ven.llamar_ventana(productos);
        }
        accion = "";
        id = null;
        filename = "";
        name = "";
        this.dispose();
    }//GEN-LAST:event_btn_cerrarActionPerformed

    private void llenar() {
        pro.setDescripcion(txt_des.getText().toUpperCase().trim());
        pro.setTipo(tipo.toUpperCase());
        pro.setCaracteristicas(txt_caract.getText().toUpperCase().trim());
        pro.setAfecto_igv(cbx_afecto.getSelectedIndex() + "");
        pro.setId_familia(cbx_familia.getSelectedIndex() + 1);
        pro.setId_sub_familia(cbx_categoria.getSelectedIndex() + 1);
        pro.setProveedor("");
        pro.setCodigo_externo(txt_codigo_externo.getText().trim());
        //if (name == null || name.equals("noimage.jpg")) {
        pro.setImg(name);
        //}
        //JOptionPane.showMessageDialog(null, pro.getTipo());
        if (pro.getTipo().equals("BIEN")) {
            pro.setId_und_med(cbx_und.getSelectedIndex() + 1);
        } else {
            pro.setId_und_med(26);
        }
        pro.setCosto(0.0);
        pro.setPrecio(Double.parseDouble(txt_pven.getText()));
        pro.setCan_min(Double.parseDouble(txt_cant_min.getText()));
        pro.setCan_max(Double.parseDouble(txt_cant_max.getText()));
        pro.setCantidad_caja(Double.parseDouble(txt_cant_caja.getText()));

    }
    private void btn_regActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_regActionPerformed
        llenar();

        if (accion.equals("registrar")) {
            if (tipo.equals("bien")) {
                //JOptionPane.showMessageDialog(null, "nombre imagen: " + name);
                if (!name.equals("noimage.jpg") && !filename.equals("noimage.jpg")) {
                    try {
                        //cambiar carpeta donde se almacenara imagen
                        ftpUploader.uploadFile(filename, name, "/casa_biblia/imagenes/productos/");
                        ftpUploader.disconnect();
                    } catch (Exception ex) {
                        System.out.print(ex);
                        JOptionPane.showMessageDialog(null, "ERROR AL CARGAR IMAGEN EN EL SERVIDOR" + ex);
                    }
                }
            }

            //BUSCAR ULTIMO PRODUCTO
            pro.setId(pro.ultimo_producto());

            //REGISTRAR PRODUCTO
            boolean registra_producto = false;
            registra_producto = pro.crear_producto();

            if (registra_producto) {
                Notification.show("PRODUCTOS", "PRODUCTO CREADO EXITOSAMENTE");
                //abrir dialog de ingresar producto 
                String fecha = ven.fechabase(frm_reg_ingreso.txt_fecha_compra.getText());
                int id_moneda = frm_reg_ingreso.cbx_moneda.getSelectedIndex();
                if (id_moneda == 1 && pro.getCosto() > 0.0) {
                    double tc_compra = Double.parseDouble(frm_reg_ingreso.txt_tc.getText());
                    pro.setCosto(tc_compra * pro.getCosto());
                }
                String descripcion, clase, familia, codigo_externo;
                if (pro.getCodigo_externo().equals("")) {
                    codigo_externo = "";
                } else {
                    codigo_externo = " - Ce: " + pro.getCodigo_externo();
                }
                descripcion = pro.getDescripcion() + codigo_externo;
                clase = cbx_categoria.getSelectedItem().toString();
                familia = cbx_familia.getSelectedItem().toString();
                frm_reg_ingreso.txt_j_caracteristicas.setText(pro.ver_caracteristicas());
                frm_reg_ingreso.txt_j_idproducto.setText(pro.getId() + "");     // COD PRO
                frm_reg_ingreso.txt_j_descripcion.setText(descripcion + " - " + clase + " - " + familia);    // DESCRIPCION
                frm_reg_ingreso.lbl_j_medida.setText(cbx_und.getSelectedItem().toString());   // UND MED
                frm_reg_ingreso.txt_j_compra.setText(ven.formato_numero(pro.getCosto()));     // PRECIO COMPRA
                frm_reg_ingreso.txt_j_venta.setText(ven.formato_numero(pro.getPrecio()));     // PRECIO VENTA
                frm_reg_ingreso.txt_j_caja.setText(ven.formato_numero(Double.parseDouble(txt_cant_caja.getText())));
                frm_reg_ingreso.txt_j_cantidad.setEnabled(true);
                frm_reg_ingreso.txt_j_cantidad.selectAll();
                frm_reg_ingreso.txt_j_cantidad.requestFocus();
                accion = "";
                id = null;
                filename = "";
                name = "";
                this.dispose();
                frm_reg_ingreso.add_productos();
            }

            if (tipo.equals("servicio")) {
                pro.setPrecio(Double.parseDouble(txt_pven.getText()));
                try {
                    Statement st = con.conexion();
                    String ins_pro = "insert into productos_almacenes values ('" + frm_menu.alm.getCodigo() + "', '" + pro.getId() + "', '0', '0',  '0', '0.0', '" + pro.getPrecio() + "')";
                    System.out.println(ins_pro);
                    con.actualiza(st, ins_pro);
                    con.cerrar(st);
                } catch (Exception e) {
                    System.out.println(e.getLocalizedMessage());
                    JOptionPane.showMessageDialog(null, e.getLocalizedMessage());
                }
            }
        }

        if (accion.equals("modificar")) {
            pro.setId(id);
            /*if (tipo.equals("bien")) {
             if (name != null) {
             try {
             ftpUploader.uploadFile(filename, name, "/casa_biblia/imagenes/productos/");
             ftpUploader.disconnect();
             } catch (Exception ex) {
             System.out.print(ex);
             JOptionPane.showMessageDialog(null, "Error - no ha seleccionado ninguna imagen");
             }
             }
             }*/

            //ACTUALIZAR PRODUCTO GENERAL
            try {
                Statement st = con.conexion();
                String update = "update productos set descripcion = '" + pro.getDescripcion() + "', codigo_externo = '" + pro.getCodigo_externo() + "', afecto_igv = '" + pro.getAfecto_igv() + "', "
                        + "caracteristicas = '" + pro.getCaracteristicas() + "', cantidad_caja = '" + pro.getCantidad_caja() + "', familia = '" + pro.getId_familia() + "', clase_familia = '" + pro.getId_sub_familia() + "', "
                        + "id_und_med = '" + pro.getId_und_med() + "', precio = '" + pro.getPrecio() + "' where id_producto = '" + pro.getId() + "'";
                System.out.println(update);
                con.actualiza(st, update);
                con.cerrar(st);
            } catch (Exception e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(null, e.getLocalizedMessage());
            }

            /* //ACTUALIZAR CANTIDAD Y PRECIO - TBL_PRODUCTO_EMPRESA
             try {
             Statement st = con.conexion();
             String update = "update productos_almacenes set cantidad_minima = '" + pro.getCan_min() + "', cantidad_maxima = '" + pro.getCan_max() + "', precio_venta = '" + pro.getPrecio() + "' where id_producto = '" + id + "'"
             + " and id_almacen = '" + frm_menu.alm.getCodigo() + "'";
             System.out.println(update);
             con.actualiza(st, update);
             con.cerrar(st);
             } catch (Exception e) {
             System.out.println(e.getLocalizedMessage());
             JOptionPane.showMessageDialog(null, e.getLocalizedMessage());
             }*/
            if (origen.equals("todo_productos")) {
                frm_ver_todo_productos productos = new frm_ver_todo_productos();
                ven.llamar_ventana(productos);
            }
            if (origen.equals("mis_productos")) {
                frm_ver_mis_productos productos = new frm_ver_mis_productos();
                ven.llamar_ventana(productos);
            }

        }

        /* if (origen.equals("todo_productos")) {
         frm_ver_todo_productos productos = new frm_ver_todo_productos();
         ven.llamar_ventana(productos);
         }
         if (origen.equals("mis_productos")) {
         frm_ver_mis_productos productos = new frm_ver_mis_productos();
         ven.llamar_ventana(productos);
         }
         if (origen.equals("ingreso")) {
         frm_reg_ingreso.txt_j_descripcion.setText(pro.getDescripcion());
         accion = "";
         id = null;
         filename = "";
         name = "";
         this.dispose();
         frm_reg_ingreso.btn_add_productos.doClick();

         }*/
        accion = "";
        id = null;
        filename = "";
        name = "";

        this.dispose();
    }//GEN-LAST:event_btn_regActionPerformed

    private void txt_desKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_desKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!txt_des.getText().isEmpty()) {
                if (tipo.equals("servicio")) {
                    txt_pven.setEnabled(true);
                    txt_pven.requestFocus();
                }
                if (tipo.equals("bien")) {
                    txt_codigo_externo.setEnabled(true);
                    txt_codigo_externo.requestFocus();
                }
            }
        }
    }//GEN-LAST:event_txt_desKeyPressed

    private void txt_cant_minKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cant_minKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!txt_cant_min.getText().isEmpty()) {
                String texto = txt_cant_min.getText();
                if (ven.esDecimal(texto)) {
                    double cantidad = Double.parseDouble(texto);
                    txt_cant_min.setText(ven.formato_numero(cantidad));
                    txt_cant_max.setEnabled(true);
                    txt_cant_max.selectAll();
                    txt_cant_max.requestFocus();
                }

            }
        }
    }//GEN-LAST:event_txt_cant_minKeyPressed

    private void txt_pcomKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pcomKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!txt_pcom.getText().isEmpty()) {
                txt_pven.setEnabled(true);
                txt_pven.requestFocus();
            }
        }
    }//GEN-LAST:event_txt_pcomKeyPressed

    private void txt_pvenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pvenKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!txt_pven.getText().isEmpty()) {
                Double pven = Double.parseDouble(txt_pven.getText());
                Double pcom = Double.parseDouble(txt_pcom.getText());
                Double ganancia = pven - pcom;
                txt_gan.setText(ven.formato_numero(ganancia));
                txt_caract.setEnabled(true);
                txt_caract.requestFocus();
                btn_reg.setEnabled(true);
            }
        }
    }//GEN-LAST:event_txt_pvenKeyPressed

    private void btn_regKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_regKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btn_reg.doClick();
        }
    }//GEN-LAST:event_btn_regKeyPressed

    public class ImagenLOCAL extends javax.swing.JPanel {

        public ImagenLOCAL() {
            this.setSize(200, 200); //se selecciona el tamaño del panel
        }

        //Se crea un método cuyo parámetro debe ser un objeto Graphics
        public void paint(Graphics grafico) {
            Dimension height = getSize();
            //Se selecciona la imagen que tenemos en el paquete de la //ruta del programa
            ImageIcon Img = new ImageIcon(filename);
            //se dibuja la imagen que tenemos en el paquete Images //dentro de un panel
            grafico.drawImage(Img.getImage(), 0, 0, height.width, height.height, null);
            setOpaque(false);
            super.paintComponent(grafico);
        }
    }

    private void txt_cant_minKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cant_minKeyTyped
        ven.solo_precio(evt);
    }//GEN-LAST:event_txt_cant_minKeyTyped

    private void cbx_undKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbx_undKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_pven.setEnabled(true);
            txt_pven.requestFocus();
        }
    }//GEN-LAST:event_cbx_undKeyPressed

    private void cbx_tipoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbx_tipoKeyPressed

    }//GEN-LAST:event_cbx_tipoKeyPressed

    private void j_imgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_j_imgMouseClicked
        try {
            name = "noimage.jpg";
            JFileChooser choosen = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("IMAGENES JPEG y PNG", "jpg", "png", "image");
            choosen.setFileFilter(filter);
            choosen.setCurrentDirectory(new File("c:/usuarios/"));
            // choosen.showOpenDialog(null);
            int respuesta = choosen.showOpenDialog(this);

            if (respuesta == JFileChooser.APPROVE_OPTION) {
                File f = choosen.getSelectedFile();
                filename = f.getAbsolutePath();
                System.out.println(filename);
                name = f.getName();
                lbl_imagen.setText(name);
            } else {
                filename = "imagenes/noimage.jpg";
                name = "noimage.jpg";
                lbl_imagen.setText(name);
            }

            pro.setImg(name);

            j_img.removeAll();
            //cargar imagen 
            ImagenLOCAL Imagen = new ImagenLOCAL();
            j_img.add(Imagen);
            j_img.repaint();
            //fin de carga

        } catch (HeadlessException ex) {
            System.out.print(ex);
        }
    }//GEN-LAST:event_j_imgMouseClicked

    private void txt_ubicacionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ubicacionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!txt_ubicacion.getText().isEmpty()) {
                txt_des.setEnabled(true);
                txt_des.requestFocus();
            }
        }
    }//GEN-LAST:event_txt_ubicacionKeyPressed

    private void txt_cant_cajaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cant_cajaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!txt_cant_caja.getText().isEmpty()) {
                if (accion.equals("registrar")) {
                    cbx_und.setEnabled(true);
                    cbx_und.setSelectedIndex(19);
                    cbx_und.requestFocus();
                } else {
                    txt_cant_min.setEnabled(true);
                    txt_cant_min.selectAll();
                    txt_cant_min.requestFocus();
                }
            }
        }
    }//GEN-LAST:event_txt_cant_cajaKeyPressed

    private void txt_cant_maxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cant_maxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!txt_cant_max.getText().isEmpty()) {
                cbx_und.setEnabled(true);
                cbx_und.requestFocus();
            }
        }
    }//GEN-LAST:event_txt_cant_maxKeyPressed

    private void cbx_familiaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbx_familiaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cat.setId_familia(cbx_familia.getSelectedIndex() + 1);
            cat.ver_categoria(cbx_categoria);
            cbx_categoria.setEnabled(true);
            cbx_categoria.requestFocus();
        }
    }//GEN-LAST:event_cbx_familiaKeyPressed

    private void cbx_categoriaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbx_categoriaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_cant_caja.setEnabled(true);
            txt_cant_caja.selectAll();
            txt_cant_caja.requestFocus();
        }
    }//GEN-LAST:event_cbx_categoriaKeyPressed

    private void cbx_afectoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbx_afectoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cbx_familia.setEnabled(true);
            cbx_familia.requestFocus();
        }
    }//GEN-LAST:event_cbx_afectoKeyPressed

    private void txt_cant_maxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cant_maxKeyTyped
        ven.solo_precio(evt);
    }//GEN-LAST:event_txt_cant_maxKeyTyped

    private void txt_pvenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pvenKeyTyped
        ven.solo_precio(evt);
    }//GEN-LAST:event_txt_pvenKeyTyped

    private void txt_codigo_externoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigo_externoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (tipo.equals("bien")) {
                cbx_afecto.setEnabled(true);
                cbx_afecto.requestFocus();
            }
        }
    }//GEN-LAST:event_txt_codigo_externoKeyPressed

    private void txt_caractKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_caractKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F3) {
            btn_reg.doClick();
        }
    }//GEN-LAST:event_txt_caractKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cerrar;
    public static javax.swing.JButton btn_reg;
    public static javax.swing.JComboBox cbx_afecto;
    public static javax.swing.JComboBox cbx_categoria;
    public static javax.swing.JComboBox cbx_familia;
    public static javax.swing.JComboBox cbx_tipo;
    public static javax.swing.JComboBox cbx_und;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JPanel j_img;
    private javax.swing.JLabel lbl_imagen;
    public static javax.swing.JTextField txt_cant_caja;
    public static javax.swing.JTextField txt_cant_max;
    public static javax.swing.JTextField txt_cant_min;
    public static javax.swing.JTextArea txt_caract;
    public static javax.swing.JTextField txt_codigo_externo;
    public static javax.swing.JTextField txt_des;
    public static javax.swing.JTextField txt_gan;
    public static javax.swing.JTextField txt_pcom;
    public static javax.swing.JTextField txt_pven;
    public static javax.swing.JTextField txt_ubicacion;
    // End of variables declaration//GEN-END:variables
}
