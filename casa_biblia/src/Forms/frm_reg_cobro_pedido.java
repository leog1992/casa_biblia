/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Clases.Cl_Caja;
import Clases.Cl_Conectar;
import Clases.Cl_Tipo_Doc;
import Clases.Cl_Varios;
import Clases.Cl_Moneda;
import Clases.Cl_Procedimientos;
import Clases.Cl_Productos;
import Clases.Cl_Usuario;
import Clases.leer_numeros;
import ImprimirClases.Print_Venta_Ticket;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import casa_biblia.frm_menu;
import java.awt.HeadlessException;
import java.lang.reflect.Array;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.Types;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author luis-d
 */
public class frm_reg_cobro_pedido extends javax.swing.JInternalFrame {

    Cl_Varios ven = new Cl_Varios();
    Cl_Conectar con = new Cl_Conectar();
    Cl_Tipo_Doc tido = new Cl_Tipo_Doc();
    Cl_Productos mat = new Cl_Productos();
    Cl_Moneda mon = new Cl_Moneda();
    Cl_Caja caj = new Cl_Caja();
    Cl_Usuario usu = new Cl_Usuario();
    public static DefaultTableModel modelo_detalle;
    DefaultTableModel modelo_vales;
    int fila_vale = 0;
    double total_vale = 0;
    boolean reg_cli;
    Integer i;
    String vendedor;
    int id_cliente = 2;
    double total_bd;
    double total_new;
    double deuda_actual;
    double vuelto;
    double tc;
    int tienda = frm_menu.alm.getCodigo();
    String empresa = frm_menu.emp.getRuc();

    /**
     * Creates new form frm_reg_cobro_pedido
     */
    public frm_reg_cobro_pedido() {
        initComponents();
        tido.ver_tipodoc(cbx_tipo_documento);
        modelo_vales();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_vale = new javax.swing.JDialog();
        jLabel8 = new javax.swing.JLabel();
        txt_jd_codigovale = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_jd_fechavale = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        txt_jd_montovale = new javax.swing.JTextField();
        btn_jd_addvale = new javax.swing.JButton();
        jsp_vales = new javax.swing.JScrollPane();
        t_vales = new javax.swing.JTable();
        btn_jd_cerrar = new javax.swing.JButton();
        btn_jd_registrar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_codigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_vendedor = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_fecha = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cbx_tipo_pedido = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        txt_dni_cliente = new javax.swing.JTextField();
        txt_nombre_cliente = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cbx_tipo_documento = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lbl_total = new javax.swing.JLabel();
        txt_jd_deuda_actual = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txt_jd_suma_pago = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txt_jd_vuelto = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txt_jd_tarjeta = new javax.swing.JTextField();
        txt_jd_vale = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txt_jd_efectivo = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();

        jLabel8.setText("Codigo de Vale:");

        txt_jd_codigovale.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_jd_codigovale.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_jd_codigovaleKeyPressed(evt);
            }
        });

        jLabel9.setText("Fecha Emision:");

        try {
            txt_jd_fechavale.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_jd_fechavale.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_jd_fechavale.setEnabled(false);

        jLabel10.setText("Monto:");

        txt_jd_montovale.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_jd_montovale.setEnabled(false);

        btn_jd_addvale.setText("Agregar");
        btn_jd_addvale.setEnabled(false);
        btn_jd_addvale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_jd_addvaleActionPerformed(evt);
            }
        });

        t_vales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jsp_vales.setViewportView(t_vales);

        javax.swing.GroupLayout jd_valeLayout = new javax.swing.GroupLayout(jd_vale.getContentPane());
        jd_vale.getContentPane().setLayout(jd_valeLayout);
        jd_valeLayout.setHorizontalGroup(
            jd_valeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_valeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jd_valeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jd_valeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jd_valeLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(btn_jd_addvale))
                    .addGroup(jd_valeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txt_jd_fechavale)
                        .addComponent(txt_jd_codigovale)
                        .addComponent(txt_jd_montovale, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jsp_vales, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                .addContainerGap())
        );
        jd_valeLayout.setVerticalGroup(
            jd_valeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_valeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jd_valeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_valeLayout.createSequentialGroup()
                        .addGroup(jd_valeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_jd_codigovale, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jd_valeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_jd_fechavale, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jd_valeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_jd_montovale, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_jd_addvale, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jsp_vales, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        setTitle("Registrar Cobro de Pedido");

        btn_jd_cerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/cancel.png"))); // NOI18N
        btn_jd_cerrar.setText("Cerrar");
        btn_jd_cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_jd_cerrarActionPerformed(evt);
            }
        });

        btn_jd_registrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/accept.png"))); // NOI18N
        btn_jd_registrar.setText("Registrar");
        btn_jd_registrar.setEnabled(false);
        btn_jd_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_jd_registrarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar Pedido"));

        jLabel1.setText("Codigo de Pedido:");

        txt_codigo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_codigoKeyPressed(evt);
            }
        });

        jLabel2.setText("Vendedor:");

        txt_vendedor.setFocusable(false);

        jLabel7.setText("Fecha:");

        try {
            txt_fecha.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_fecha.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_fecha.setFocusable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_vendedor, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txt_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_vendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txt_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del Pedido"));

        jLabel4.setText("Tipo Pedido");

        cbx_tipo_pedido.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "VENTA", "SEPARACION" }));
        cbx_tipo_pedido.setEnabled(false);
        cbx_tipo_pedido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbx_tipo_pedidoKeyPressed(evt);
            }
        });

        jLabel5.setText("Datos Cliente:");

        txt_dni_cliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_dni_cliente.setEnabled(false);
        txt_dni_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_dni_clienteKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_dni_clienteKeyTyped(evt);
            }
        });

        txt_nombre_cliente.setEnabled(false);
        txt_nombre_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nombre_clienteKeyPressed(evt);
            }
        });

        jLabel6.setText("Tipo Documento:");

        cbx_tipo_documento.setEnabled(false);
        cbx_tipo_documento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbx_tipo_documentoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(30, 30, 30)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_dni_cliente)
                    .addComponent(cbx_tipo_pedido, 0, 167, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel6)
                        .addGap(30, 30, 30)
                        .addComponent(cbx_tipo_documento, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(167, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_nombre_cliente)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbx_tipo_documento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbx_tipo_pedido, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_dni_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_nombre_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel3.setText("Total");

        lbl_total.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        lbl_total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_total.setText("S/. 0.00");

        txt_jd_deuda_actual.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_jd_deuda_actual.setText("0.00");
        txt_jd_deuda_actual.setFocusable(false);

        jLabel20.setText("Suma Pago:");

        txt_jd_suma_pago.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_jd_suma_pago.setText("0.00");
        txt_jd_suma_pago.setFocusable(false);

        jLabel21.setText("Vuelto:");

        txt_jd_vuelto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_jd_vuelto.setText("0.00");
        txt_jd_vuelto.setFocusable(false);

        jLabel22.setText("Deuda Actual:");

        jLabel19.setText("Vale:");

        txt_jd_tarjeta.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_jd_tarjeta.setEnabled(false);
        txt_jd_tarjeta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_jd_tarjetaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_jd_tarjetaKeyTyped(evt);
            }
        });

        txt_jd_vale.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_jd_vale.setText("0.00");
        txt_jd_vale.setEnabled(false);

        jLabel17.setText("Efectivo:");

        txt_jd_efectivo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_jd_efectivo.setEnabled(false);
        txt_jd_efectivo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_jd_efectivoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_jd_efectivoKeyTyped(evt);
            }
        });

        jLabel18.setText("Tarjeta:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbl_total, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_jd_vale, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_jd_tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_jd_efectivo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel20))
                                .addGap(58, 58, 58)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_jd_suma_pago, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_jd_vuelto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_jd_deuda_actual, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_total, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_jd_suma_pago, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_jd_vuelto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(txt_jd_deuda_actual, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_jd_efectivo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_jd_tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_jd_vale, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_jd_registrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_jd_cerrar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_jd_cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_jd_registrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void modelo_vales() {
        modelo_vales = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int fila, int columna) {
                return false;
            }
        };
        modelo_vales.addColumn("Id");
        modelo_vales.addColumn("Codigo");
        modelo_vales.addColumn("Valor");
        t_vales.setModel(modelo_vales);
        t_vales.getColumnModel().getColumn(0).setPreferredWidth(35);
        t_vales.getColumnModel().getColumn(1).setPreferredWidth(100);
        t_vales.getColumnModel().getColumn(2).setPreferredWidth(60);
        ven.centrar_celda(t_vales, 1);
        ven.derecha_celda(t_vales, 2);
    }


    private void txt_jd_tarjetaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_jd_tarjetaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            double tarjeta = 0;
            if (txt_jd_tarjeta.getText().length() > 0) {
                tarjeta = Double.parseDouble(txt_jd_tarjeta.getText());
            }
            txt_jd_tarjeta.setText(ven.formato_numero(tarjeta));

            //sumar digitos
            double efectivo = Double.parseDouble(txt_jd_efectivo.getText());
            double cupon = Double.parseDouble(txt_jd_vale.getText());

            double suma_pago = tarjeta + cupon + efectivo;
            vuelto = suma_pago - total_new;
            deuda_actual = total_new - suma_pago;

            txt_jd_suma_pago.setText(ven.formato_totales(suma_pago));

            if (vuelto > 0) {
                txt_jd_vuelto.setText(ven.formato_totales(vuelto));
            } else {
                txt_jd_vuelto.setText("0.00");
            }

            if (deuda_actual > 0) {
                txt_jd_deuda_actual.setText(ven.formato_totales(deuda_actual));
                JOptionPane.showMessageDialog(null, "SE REGISTRARA COMO VENTA AL CREDITO");
            } else {
                txt_jd_deuda_actual.setText("0.00");
            }

            if (suma_pago > 0.0) {
                btn_jd_registrar.setEnabled(true);
                btn_jd_registrar.requestFocus();
            }
        }
    }//GEN-LAST:event_txt_jd_tarjetaKeyPressed

    private void txt_jd_tarjetaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_jd_tarjetaKeyTyped
        ven.solo_precio(evt);
    }//GEN-LAST:event_txt_jd_tarjetaKeyTyped

    private void txt_jd_efectivoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_jd_efectivoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            double efectivo = 0;
            if (txt_jd_efectivo.getText().length() > 0) {
                efectivo = Double.parseDouble(txt_jd_efectivo.getText());
            }
            txt_jd_efectivo.setText(ven.formato_numero(efectivo));
            double cupon = Double.parseDouble(txt_jd_vale.getText());
            double tarjeta = 0.0;
            double suma_pago = tarjeta + cupon + efectivo;
            vuelto = suma_pago - total_new;
            deuda_actual = total_new - suma_pago;

            txt_jd_suma_pago.setText(ven.formato_totales(suma_pago));

            if (vuelto > 0) {
                txt_jd_vuelto.setText(ven.formato_totales(vuelto));
            } else {
                txt_jd_vuelto.setText("0.00");
            }

            if (deuda_actual > 0) {
                txt_jd_deuda_actual.setText(ven.formato_totales(deuda_actual));
            } else {
                txt_jd_deuda_actual.setText("0.00");
            }

            txt_jd_tarjeta.setEnabled(true);
            txt_jd_tarjeta.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_V) {
            jd_vale.setModal(true);
            jd_vale.setSize(570, 180);
            jd_vale.setLocationRelativeTo(null);
            jd_vale.setVisible(true);
        }
    }//GEN-LAST:event_txt_jd_efectivoKeyPressed

    private void txt_jd_efectivoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_jd_efectivoKeyTyped
        ven.solo_precio(evt);
    }//GEN-LAST:event_txt_jd_efectivoKeyTyped

    private void btn_jd_cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_jd_cerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_jd_cerrarActionPerformed

    private void btn_jd_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_jd_registrarActionPerformed
        Cl_Procedimientos proc = new Cl_Procedimientos();
        btn_jd_registrar.setEnabled(false);
        btn_jd_cerrar.setEnabled(false);
        String fecha = ven.getFechaActual();
        String fecha_pago;
        String nro_documento = txt_dni_cliente.getText();
        String nom_cliente = txt_nombre_cliente.getText().toUpperCase();
        String anio_periodo = fecha.charAt(0) + "" + fecha.charAt(1) + fecha.charAt(2) + fecha.charAt(3);
        String mes_periodo = fecha.charAt(5) + "" + fecha.charAt(6);
        String periodo = mes_periodo + "-" + anio_periodo;
        String pedido = txt_codigo.getText();
        String estado;
        int tipo_pedido = cbx_tipo_pedido.getSelectedIndex();
        if (deuda_actual > 0) {
            fecha_pago = "2070-01-01";
            estado = "6";
        } else {
            fecha_pago = fecha;
            estado = "1";
        }

        double efectivo = Double.parseDouble(txt_jd_efectivo.getText());
        double tarjeta = Double.parseDouble(txt_jd_tarjeta.getText());
        double vale = Double.parseDouble(txt_jd_vale.getText());
        double suma_pagos = efectivo + tarjeta + vale;
        double nuevo_efectivo;
        if (suma_pagos > total_new) {
            double exceso = suma_pagos - total_new;
            nuevo_efectivo = efectivo - exceso;
        } else {
            nuevo_efectivo = efectivo;
        }
        int id_moneda = 1;
        tc = 1.000;

        try {
            Statement st = con.conexion();
            String u_pedido = "update pedido_cliente set fecha_cobro = NOW(), estado = '1', cajero = '" + frm_menu.usu.getNick() + "' where id = '" + pedido + "' and anio = year(current_date()) and tienda = '" + tienda + "' and empresa = '" + empresa + "'";
            System.out.println(u_pedido);
            con.actualiza(st, u_pedido);
            con.cerrar(st);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getLocalizedMessage());
        }
        tido.setDesc(cbx_tipo_documento.getSelectedItem().toString());
        tido.setId(cbx_tipo_documento.getSelectedIndex() + 1);

        if (tipo_pedido == 0) {
            int id_venta_afecto = 0;
            int id_venta_inafecto = 0;
            int contar_afecto = 0;
            int contar_inafecto = 0;
            double suma_afecto = 0;
            double suma_inafecto = 0;

            Object[] inretorno = proc.insertar_inafectos(tienda, empresa, pedido, tido.getId(), id_cliente, nom_cliente, nro_documento, vendedor, estado, periodo,
                    total_new, nuevo_efectivo, tarjeta, vale, frm_menu.usu.getNick());
            id_venta_inafecto = (int) inretorno[0];
            contar_inafecto = (int) inretorno[1];
            suma_inafecto = Double.parseDouble(inretorno[2].toString());

            //seleccionar productos inafectos al igv y generar venta e imprimir ticket
            if (contar_inafecto > 0 && id_venta_inafecto > 0) {
                //JOptionPane.showMessageDialog(null, "IMPRIMIENDO TICKET PARA VENTA INAFECTO - NRO: " + id_venta_inafecto + " EMPRESA " + empresa + " TIENDA: " + tienda + "  POR EL TOTAL DE: " + ven.formato_totales(suma_inafecto));
                // imprimir reporte
                Map<String, Object> parametros = new HashMap<>();
                parametros.put("id_venta", id_venta_inafecto);
                parametros.put("periodo", periodo);
                parametros.put("id_almacen", tienda);
                parametros.put("empresa", empresa);
                leer_numeros leer = new leer_numeros();
                String texto_numero = leer.Convertir(ven.formato_numero(suma_inafecto), true) + " SOLES";
                parametros.put("monto_letras", texto_numero);
                String filename = "";
                Print_Venta_Ticket ticket = new Print_Venta_Ticket();
                //ticket.generar(id_venta_inafecto, periodo, tienda, empresa);
                if (tido.getId() == 2) {
                    filename = "rpt_ticket_notaventa";
                } else {
                    filename = "rpt_ticket_venta";
                }
                //ven.ver_reporte(filename, parametros);
                ven.imp_reporte(filename, parametros);
            }

            Object[] retorno = proc.insertar_afectos(tienda, empresa, pedido, tido.getId(), id_cliente, nom_cliente, nro_documento, vendedor, estado, periodo,
                    total_new, nuevo_efectivo, tarjeta, vale, frm_menu.usu.getNick());
            id_venta_afecto = (int) retorno[0];
            contar_afecto = (int) retorno[1];
            suma_afecto = Double.parseDouble(retorno[2].toString());

            //seleccionar productos afectos al igv y generar venta e imprimir ticket
            if (contar_afecto > 0 && id_venta_afecto > 0) {
                //JOptionPane.showMessageDialog(null, "IMPRIMIENDO TICKET PARA VENTA AFECTO - NRO: " + id_venta_afecto + " EMPRESA " + empresa + " TIENDA: " + tienda + " POR EL TOTAL DE: " + ven.formato_totales(suma_afecto));
                // imprimir reporte
                Map<String, Object> parametros = new HashMap<>();
                parametros.put("id_venta", id_venta_afecto);
                parametros.put("periodo", periodo);
                parametros.put("id_almacen", tienda);
                parametros.put("empresa", empresa);
                leer_numeros leer = new leer_numeros();
                String texto_numero = leer.Convertir(ven.formato_numero(suma_afecto), true) + " SOLES";
                parametros.put("monto_letras", texto_numero);
                String filename = "";
                Print_Venta_Ticket ticket = new Print_Venta_Ticket();
                //ticket.generar(id_venta_afecto, periodo, tienda, empresa);
                if (tido.getId() == 2) {
                    filename = "rpt_ticket_notaventa";
                } else {
                    filename = "rpt_ticket_venta";
                }
                //ven.ver_reporte(filename, parametros);
                ven.imp_reporte(filename, parametros);
            }

            //aqui estuvo inafectos
            //TIPO DE PEDIDO IGUAL A SEPARACION
            if (tipo_pedido == 1) {
                int id_venta = 0;
                //guardar nota de venta de separacion
                try {
                    Statement st = con.conexion();
                    String ver_id = "select id_venta from ventas where id_almacen = '" + tienda + "' and periodo = '" + periodo + "' and empresa = '" + empresa + "' order by id_venta desc limit 1";
                    System.out.println(ver_id);
                    ResultSet rs = con.consulta(st, ver_id);
                    if (rs.next()) {
                        id_venta = rs.getInt("id_venta") + 1;
                    } else {
                        id_venta = 1;
                    }
                    con.cerrar(st);
                    con.cerrar(rs);
                } catch (SQLException e) {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(null, e.getLocalizedMessage());
                }

                tido.setId(cbx_tipo_documento.getSelectedIndex() + 1);
                tido.setSer(tido.ver_serie(tienda, empresa));
                tido.setNro(tido.ver_numero(tienda, empresa));

                //crear venta
                int registro_venta = -1;
                try {
                    Statement st = con.conexion();
                    String ins_venta = "insert into ventas values ('" + id_venta + "', '" + periodo + "', '" + tienda + "', '" + empresa + "','" + id_cliente + "', '" + nom_cliente + "','" + tido.getId() + "',"
                            + " '" + tido.getSer() + "', '" + tido.getNro() + "', '" + fecha + "', '" + fecha_pago + "', '" + pedido + "', '" + anio_periodo + "','" + total_new + "', "
                            + "'2', NOW(), '" + vendedor + "', '2')";
                    System.out.println(ins_venta);
                    registro_venta = con.actualiza(st, ins_venta);
                    con.cerrar(st);
                } catch (Exception e) {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(null, e.getLocalizedMessage());
                }

                if (registro_venta > -1) {
                    //recorrer tabla detalle_pedido
                    try {
                        Statement std = con.conexion();
                        String c_detalle = "select dpc.producto, dpc.cantidad, dpc.precio from detalle_pedido_cliente as dpc where dpc.id = '" + pedido + "' and dpc.anio = year(current_date()) and dpc.tienda ="
                                + " '" + tienda + "' and dpc.empresa = '" + empresa + "'";
                        ResultSet rsd = con.consulta(std, c_detalle);
                        while (rsd.next()) {
                            //guardar detalle de separacion
                            mat.setId(rsd.getInt("producto"));
                            mat.setCan(rsd.getDouble("cantidad"));
                            mat.setPrecio(rsd.getDouble("precio"));
                            //ingresar a detalle_venta
                            try {
                                Statement sti = con.conexion();
                                String i_detalle_venta = "insert into detalle_venta values ('" + tienda + "', '" + empresa + "', '" + id_venta + "', '" + periodo + "', '" + mat.getId() + "', '" + mat.getCan() + "', '" + mat.getPrecio() + "')";
                                con.actualiza(sti, i_detalle_venta);
                                con.cerrar(sti);
                            } catch (Exception e) {
                                System.out.println(e.getLocalizedMessage());
                            }
                        }
                        con.cerrar(rsd);
                        con.cerrar(std);
                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(null, e.getLocalizedMessage());
                    }

                    int id_pago = 0;
                    //registro de pagos
                    if (nuevo_efectivo > 0) {
                        try {
                            id_pago++;
                            Statement st = con.conexion();
                            String ins_pago = "insert into pago_ventas value ('" + id_pago + "', '" + id_venta + "', '" + periodo + "', '" + tienda + "', '" + empresa + "','" + fecha + "', '" + id_moneda + "', "
                                    + "'" + tc + "', '" + nuevo_efectivo + "', 'EFECTIVO')";
                            System.out.println(ins_pago);
                            con.actualiza(st, ins_pago);
                            con.cerrar(st);
                        } catch (Exception ex) {
                            System.out.print(ex);
                            JOptionPane.showMessageDialog(null, ex.getLocalizedMessage());
                        }

                        //REGISTRAR MOVIMIENTO EN CAJA CHICA
                        String concepto = "PAGO DE VENTA - " + tido.getDesc() + "/  " + tido.getSer() + "-" + tido.getNro();
                        int nro_caja = caj.codigo_movimiento(fecha);
                        try {
                            Statement st = con.conexion();
                            String ins_caja = "insert into caja_chica value ('" + nro_caja + "', '" + tienda + "', '" + empresa + "','" + fecha + "', '" + id_moneda + "', '" + concepto + "', 'I', 'V', 'E',"
                                    + "'" + nuevo_efectivo + "', '" + frm_menu.usu.getNick() + "', NOW())";
                            System.out.println(ins_caja);
                            con.actualiza(st, ins_caja);
                            con.cerrar(st);
                        } catch (Exception ex) {
                            System.out.print(ex);
                            JOptionPane.showMessageDialog(null, ex.getLocalizedMessage());
                        }
                    }

                    if (tarjeta > 0) {
                        try {
                            id_pago++;
                            Statement st = con.conexion();
                            String ins_pago = "insert into pago_ventas value ('" + id_pago + "', '" + id_venta + "', '" + periodo + "', '" + tienda + "', '" + empresa + "','" + fecha + "', '" + id_moneda + "', "
                                    + "'" + tc + "', '" + tarjeta + "', 'TARJETA')";
                            System.out.println(ins_pago);
                            con.actualiza(st, ins_pago);
                            con.cerrar(st);
                        } catch (Exception ex) {
                            System.out.print(ex);
                            JOptionPane.showMessageDialog(null, ex.getLocalizedMessage());
                        }

                        //REGISTRAR MOVIMIENTO EN CAJA CHICA
                        String concepto = "PAGO DE VENTA - " + tido.getDesc() + "/  " + tido.getSer() + "-" + tido.getNro();
                        int nro_caja = caj.codigo_movimiento(fecha);
                        try {
                            Statement st = con.conexion();
                            String ins_caja = "insert into caja_chica value ('" + nro_caja + "', '" + tienda + "', '" + empresa + "', '" + fecha + "', '" + id_moneda + "', '" + concepto + "', 'I', 'V', 'T',"
                                    + "'" + tarjeta + "', '" + frm_menu.usu.getNick() + "', NOW())";
                            System.out.println(ins_caja);
                            con.actualiza(st, ins_caja);
                            con.cerrar(st);
                        } catch (Exception ex) {
                            System.out.print(ex);
                            JOptionPane.showMessageDialog(null, ex.getLocalizedMessage());
                        }
                    }

                    if (vale > 0) {
                        try {
                            id_pago++;
                            Statement st = con.conexion();
                            String ins_pago = "insert into pago_ventas value ('" + id_pago + "', '" + id_venta + "', '" + periodo + "', '" + tienda + "', '" + empresa + "','" + fecha + "', '" + id_moneda + "', "
                                    + "'" + tc + "', '" + vale + "', 'CUPON')";
                            System.out.println(ins_pago);
                            con.actualiza(st, ins_pago);
                            con.cerrar(st);
                        } catch (Exception ex) {
                            System.out.print(ex);
                            JOptionPane.showMessageDialog(null, ex.getLocalizedMessage());
                        }
                    }
                    //actualizar documento de la tienda
                    tido.act_numero(tido.getId(), tido.getNro(), tienda, empresa);

                    // imprimir reporte
                    Map<String, Object> parametros = new HashMap<>();
                    parametros.put("id_venta", id_venta);
                    parametros.put("periodo", periodo);
                    parametros.put("id_almacen", tienda);
                    parametros.put("empresa", tienda);
                    leer_numeros leer = new leer_numeros();
                    String texto_numero = leer.Convertir(ven.formato_numero(total_new), true) + " SOLES";
                    parametros.put("monto_letras", texto_numero);
                    parametros.put("adelanto", suma_pagos);
                    parametros.put("acumulado", suma_pagos);
                    String filename = "rpt_notaventa_separacion";
                    ven.imp_reporte(filename, parametros);

                }
                //registrar pago de separacion
                //imprimir ticket de separacion con pago adelantado
            }

            //MODIFICAR CUPONES
            int cantidad_cupones = t_vales.getRowCount();
            if (cantidad_cupones
                    > 0) {
                for (int j = 0; j < cantidad_cupones; j++) {
                    String codigo_cupon = t_vales.getValueAt(j, 1).toString();
                    try {
                        Statement st = con.conexion();
                        String u_cupon = "update cupon_pago set estado = '1' where id_cupon_pago = '" + codigo_cupon + "'";
                        con.actualiza(st, u_cupon);
                        con.cerrar(st);
                    } catch (Exception e) {
                        System.out.println(e.getLocalizedMessage());
                    }
                }
            }
        }
        this.dispose();
        frm_reg_cobro_pedido venta = new frm_reg_cobro_pedido();

        ven.llamar_ventana(venta);

    }//GEN-LAST:event_btn_jd_registrarActionPerformed


    private void txt_codigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String texto = txt_codigo.getText();
            if (texto.length() > 0) {
                //buscar venta
                try {
                    Statement st = con.conexion();
                    String c_pedido = "select e.nombres, e.ape_pat, e.ape_mat, pc.fecha_pedido, pc.total, pc.estado, pc.vendedor from pedido_cliente as pc inner join empleados as e on pc.vendedor = e.dni where pc.id = '" + texto + "' and anio = year(current_date()) and pc.tienda = '" + tienda + "' and pc.empresa = '" + empresa + "'";
                    System.out.println(c_pedido);
                    ResultSet rs = con.consulta(st, c_pedido);
                    if (rs.next()) {
                        if (rs.getString("estado").equals("0")) {
                            vendedor = rs.getString("vendedor");
                            txt_vendedor.setText(rs.getString("nombres") + " " + rs.getString("ape_pat") + " " + rs.getString("ape_mat"));
                            txt_fecha.setText(ven.fechaformateada(rs.getString("fecha_pedido")));
                            lbl_total.setText("S/ " + rs.getString("total"));
                            total_bd = rs.getDouble("total");
                            total_new = rs.getDouble("total");
                            cbx_tipo_pedido.setEnabled(true);
                            cbx_tipo_pedido.requestFocus();
                        } else {
                            JOptionPane.showMessageDialog(null, "EL PEDIDO YA ESTA COBRADO");
                            txt_codigo.setText("");
                            txt_codigo.requestFocus();
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "EL PEDIDO NO EXISTE");
                        txt_codigo.setText("");
                        txt_codigo.requestFocus();
                    }
                } catch (SQLException | HeadlessException e) {
                    System.out.println(e.getMessage());
                    JOptionPane.showMessageDialog(null, e.getLocalizedMessage());
                }
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_F12) {
            Print_Venta_Ticket ticket = new Print_Venta_Ticket();
            ticket.generar(1051, "01-2017", 2, "10180909350");
        }

    }//GEN-LAST:event_txt_codigoKeyPressed

    private void cbx_tipo_pedidoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbx_tipo_pedidoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int tipo_venta = cbx_tipo_pedido.getSelectedIndex() + 1;
            if (tipo_venta == 1) {
                cbx_tipo_documento.setEnabled(true);
                cbx_tipo_documento.requestFocus();
                cbx_tipo_documento.setSelectedIndex(1);
            }
            if (tipo_venta == 2) {
                cbx_tipo_documento.setEnabled(true);
                cbx_tipo_documento.requestFocus();
                cbx_tipo_documento.setSelectedIndex(1);
            }

        }
    }//GEN-LAST:event_cbx_tipo_pedidoKeyPressed

    private void cbx_tipo_documentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbx_tipo_documentoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int tipo_venta = cbx_tipo_pedido.getSelectedIndex() + 1;
            switch (cbx_tipo_documento.getSelectedIndex()) {
                case 1:
                    if (tipo_venta == 1) {
                        txt_dni_cliente.setText("00000000");
                        txt_nombre_cliente.setText("CLIENTES GENERALES");
                        id_cliente = 2;
                        txt_jd_efectivo.setEnabled(true);
                        txt_jd_efectivo.requestFocus();
                    } else {
                        JOptionPane.showMessageDialog(null, "POR FAVOR INGRESE DATOS DEL CLIENTE");
                        txt_dni_cliente.setEnabled(true);
                        txt_dni_cliente.requestFocus();
                    }
                    break;
                case 3:
                    if (tipo_venta == 1) {
                        limpiar_cliente();
                        cbx_tipo_documento.setSelectedIndex(8);
                        txt_dni_cliente.setEnabled(true);
                        txt_dni_cliente.requestFocus();
                    }
                    break;
                case 4:
                    limpiar_cliente();

                    if (tipo_venta == 1) {
                        cbx_tipo_documento.setSelectedIndex(8);
                        if (total_bd > 750) {
                            txt_dni_cliente.setEnabled(true);
                            txt_dni_cliente.requestFocus();
                        } else {
                            txt_dni_cliente.setText("00000000");
                            txt_nombre_cliente.setEnabled(true);
                            txt_nombre_cliente.requestFocus();
                        }
                    }
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "NO SE PUEDE SELECCIONAR");
                    break;
            }
        }
    }//GEN-LAST:event_cbx_tipo_documentoKeyPressed

    private void txt_nombre_clienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nombre_clienteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_jd_efectivo.setEnabled(true);
            txt_jd_efectivo.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_F3) {
            txt_nombre_cliente.setText("CLIENTES GENERALES");
            txt_jd_efectivo.setEnabled(true);
            txt_jd_efectivo.requestFocus();
        }
    }//GEN-LAST:event_txt_nombre_clienteKeyPressed

    private void txt_dni_clienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_dni_clienteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String ruc = txt_dni_cliente.getText().trim();
            if (ruc.length() == 8) {
                try {
                    Statement st = con.conexion();
                    String buscar = "select id_cliente, nombre from clientes where nro_documento = '" + ruc + "'";
                    ResultSet rs = con.consulta(st, buscar);
                    if (rs.next()) {
                        id_cliente = rs.getInt("id_cliente");
                        txt_nombre_cliente.setText(rs.getString("nombre"));
                        txt_jd_efectivo.setEnabled(true);
                        txt_jd_efectivo.requestFocus();
                    } else {
                        JOptionPane.showMessageDialog(null, "El cliente no existe, registrar por favor");
                        frm_reg_cliente cliente = new frm_reg_cliente();
                        frm_reg_cliente.origen = "venta";
                        frm_reg_cliente.accion = "registrar";
                        ven.llamar_ventana(cliente);
                    }
                    con.cerrar(rs);
                    con.cerrar(st);
                } catch (SQLException ex) {
                    System.out.print(ex);
                    JOptionPane.showMessageDialog(null, ex.getLocalizedMessage());
                }
            }
            if (ruc.length() == 11) {
                //validar ruc 
                boolean ruc_valido = ven.validar_RUC(ruc);
                if (ruc_valido == true) {
                    try {

                        Statement st = con.conexion();
                        String buscar = "select id_cliente, nombre from clientes where nro_documento = '" + ruc + "'";
                        ResultSet rs = con.consulta(st, buscar);
                        if (rs.next()) {
                            id_cliente = rs.getInt("id_cliente");
                            txt_nombre_cliente.setText(rs.getString("nombre"));
                            txt_jd_efectivo.setEnabled(true);
                            txt_jd_efectivo.requestFocus();
                        } else {
                            JOptionPane.showMessageDialog(null, "El cliente no existe, registrar por favor");
                            frm_reg_cliente cliente = new frm_reg_cliente();
                            frm_reg_cliente.origen = "venta";
                            frm_reg_cliente.accion = "registrar";
                            ven.llamar_ventana(cliente);
                        }
                        con.cerrar(rs);
                        con.cerrar(st);
                    } catch (SQLException ex) {
                        System.out.print(ex);
                        JOptionPane.showMessageDialog(null, ex.getLocalizedMessage());
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "EL NRO DE RUC NO ES VALIDO");
                    frm_reg_ingreso.txt_ruc.setText("");
                    frm_reg_ingreso.txt_ruc.requestFocus();
                }
            }
        }
    }//GEN-LAST:event_txt_dni_clienteKeyPressed

    private void txt_dni_clienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_dni_clienteKeyTyped
        ven.solo_numeros(evt);
    }//GEN-LAST:event_txt_dni_clienteKeyTyped

    private void txt_jd_codigovaleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_jd_codigovaleKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String codigo_vale = txt_jd_codigovale.getText();
            if (codigo_vale.length() == 11) {
                try {
                    Statement st = con.conexion();
                    String c_vale = "select valor, fecha_creacion, estado from cupon_pago where id_cupon_pago = '" + codigo_vale + "'";
                    ResultSet rs = con.consulta(st, c_vale);
                    if (rs.next()) {
                        String estado = rs.getString("estado");
                        if (estado.equals("0")) {
                            txt_jd_fechavale.setText(ven.fechaformateada(rs.getString("fecha_creacion")));
                            txt_jd_montovale.setText(ven.formato_numero(rs.getDouble("valor")));
                            btn_jd_addvale.setEnabled(true);
                            btn_jd_addvale.requestFocus();
                        } else {
                            JOptionPane.showMessageDialog(null, "EL CUPON YA HA SIDO USADO");
                            txt_jd_codigovale.setText("");
                            txt_jd_codigovale.requestFocus();
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "EL VALE NO EXISTE");
                        txt_jd_codigovale.setText("");
                        txt_jd_codigovale.requestFocus();
                    }
                    con.cerrar(rs);
                    con.cerrar(st);
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e.getLocalizedMessage());
                }
            } else {
                JOptionPane.showMessageDialog(null, "FALTAN DIGITOS, COMPLETAR POR FAVOR");
            }
        }
    }//GEN-LAST:event_txt_jd_codigovaleKeyPressed

    private void btn_jd_addvaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_jd_addvaleActionPerformed
        Object[] fila = new Object[3];
        fila_vale++;
        fila[0] = fila_vale;
        fila[1] = txt_jd_codigovale.getText().toUpperCase().trim();
        fila[2] = txt_jd_montovale.getText();
        Double vale = Double.parseDouble(txt_jd_montovale.getText());
        total_vale += vale;
        txt_jd_vale.setText(ven.formato_numero(total_vale));
        modelo_vales.addRow(fila);
        t_vales.setModel(modelo_detalle);
        txt_jd_codigovale.setText("");
        txt_jd_montovale.setText("");
        txt_jd_fechavale.setText("");
        txt_jd_codigovale.requestFocus();
    }//GEN-LAST:event_btn_jd_addvaleActionPerformed

    private void limpiar_cliente() {
        txt_dni_cliente.setText("");
        txt_nombre_cliente.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_jd_addvale;
    private javax.swing.JButton btn_jd_cerrar;
    private javax.swing.JButton btn_jd_registrar;
    private javax.swing.JComboBox cbx_tipo_documento;
    private javax.swing.JComboBox cbx_tipo_pedido;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JDialog jd_vale;
    private javax.swing.JScrollPane jsp_vales;
    public static javax.swing.JLabel lbl_total;
    private javax.swing.JTable t_vales;
    private javax.swing.JTextField txt_codigo;
    private javax.swing.JTextField txt_dni_cliente;
    private javax.swing.JFormattedTextField txt_fecha;
    private javax.swing.JTextField txt_jd_codigovale;
    private javax.swing.JTextField txt_jd_deuda_actual;
    private javax.swing.JTextField txt_jd_efectivo;
    private javax.swing.JFormattedTextField txt_jd_fechavale;
    private javax.swing.JTextField txt_jd_montovale;
    private javax.swing.JTextField txt_jd_suma_pago;
    private javax.swing.JTextField txt_jd_tarjeta;
    private javax.swing.JTextField txt_jd_vale;
    private javax.swing.JTextField txt_jd_vuelto;
    private javax.swing.JTextField txt_nombre_cliente;
    private javax.swing.JTextField txt_vendedor;
    // End of variables declaration//GEN-END:variables
}
