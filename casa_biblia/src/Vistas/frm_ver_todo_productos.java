/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Clases.Cl_Categoria;
import Clases.Cl_Conectar;
import Clases.Cl_Medidas;
import Clases.Cl_Moneda;
import Clases.Cl_Productos;
import Clases.Cl_Varios;
import Forms.frm_reg_ingreso;
import Forms.frm_reg_productos;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Objects;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import casa_biblia.frm_menu;
import nicon.notify.core.Notification;

/**
 *
 * @author pc
 */
public class frm_ver_todo_productos extends javax.swing.JInternalFrame {

    Cl_Conectar con = new Cl_Conectar();
    Cl_Medidas med = new Cl_Medidas();
    Cl_Productos pro = new Cl_Productos();
    Cl_Varios ven = new Cl_Varios();
    Cl_Moneda mon = new Cl_Moneda();
    Cl_Categoria cat = new Cl_Categoria();
    public static String origen = "";
    String tipo;
    Integer i;

    /**
     * Creates new form frm_ver_productos
     */
    public frm_ver_todo_productos() {
        initComponents();
        String query = "select p.id_producto, p.codigo_externo, p.descripcion, p.tipo_producto, f.descripcion as nombre_familia, cf.descripcion as nombre_clase, p.costo, p.precio, um.corto, p.cantidad_caja "
                + "from productos as p inner join unidad_medida as um on p.id_und_med = um.id_und_med inner join familia_productos as f on p.familia = f.id  inner join clasificacion_familia as cf "
                + "on cf.id= p.clase_familia and cf.familia=p.familia where estado = '1' order by p.descripcion asc limit 0";
        pro.ver_todo_productos(t_productos, query);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_cerrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txt_bus = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        t_productos = new javax.swing.JTable();
        btn_registrar = new javax.swing.JButton();
        btn_mod = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lbl_nro = new javax.swing.JLabel();
        lbl_ayuda = new javax.swing.JLabel();
        btn_eliminar = new javax.swing.JButton();

        setTitle("Ver Productos");

        btn_cerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/cancel.png"))); // NOI18N
        btn_cerrar.setText("Cerrar");
        btn_cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cerrarActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar:");

        txt_bus.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_busFocusGained(evt);
            }
        });
        txt_bus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_busKeyPressed(evt);
            }
        });

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        t_productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "Aceite SAE192", "Castrol", "5", "Glns", "15.20", "Normal"},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Descripcion", "Marca", "Cant.", "Und. Med.", "Precio", "Estado"
            }
        ));
        t_productos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t_productosMouseClicked(evt);
            }
        });
        t_productos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_productosFocusGained(evt);
            }
        });
        t_productos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_productosKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(t_productos);
        if (t_productos.getColumnModel().getColumnCount() > 0) {
            t_productos.getColumnModel().getColumn(0).setPreferredWidth(20);
            t_productos.getColumnModel().getColumn(1).setPreferredWidth(150);
            t_productos.getColumnModel().getColumn(2).setPreferredWidth(50);
            t_productos.getColumnModel().getColumn(3).setPreferredWidth(20);
            t_productos.getColumnModel().getColumn(4).setPreferredWidth(30);
            t_productos.getColumnModel().getColumn(5).setPreferredWidth(40);
            t_productos.getColumnModel().getColumn(6).setPreferredWidth(40);
        }

        btn_registrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/application_add.png"))); // NOI18N
        btn_registrar.setText("Crear Producto");
        btn_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registrarActionPerformed(evt);
            }
        });

        btn_mod.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/application_edit.png"))); // NOI18N
        btn_mod.setText("Modifcar");
        btn_mod.setEnabled(false);
        btn_mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modActionPerformed(evt);
            }
        });

        jLabel2.setText("COINCIDENCIAS ENCONTRADAS: ");

        lbl_nro.setText("jLabel3");

        lbl_ayuda.setText("Ayuda:");

        btn_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/delete.png"))); // NOI18N
        btn_eliminar.setText("Eliminar");
        btn_eliminar.setEnabled(false);
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_bus, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_nro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                        .addComponent(btn_registrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_mod))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btn_eliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_ayuda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_cerrar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_bus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_registrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_mod, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(lbl_nro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_ayuda)
                    .addComponent(btn_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registrarActionPerformed
        frm_reg_productos productos = new frm_reg_productos();
        frm_reg_productos.origen = "todo_productos";
        frm_reg_productos.accion = "registrar";
        frm_reg_productos.tipo = "bien";
        ven.llamar_ventana(productos);
        this.dispose();
    }//GEN-LAST:event_btn_registrarActionPerformed

    private void btn_cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_cerrarActionPerformed

    private void txt_busKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_busKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F3) {
            btn_registrar.doClick();
        }
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            txt_bus.setText("");
            txt_bus.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            frm_reg_ingreso.txt_buscar_productos.setText("");
            frm_reg_ingreso.txt_buscar_productos.requestFocus();
            this.dispose();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String buscar = txt_bus.getText();
            if (buscar.length() > 2) {
                String query = "select p.id_producto, p.codigo_externo, p.descripcion, p.tipo_producto, f.descripcion as nombre_familia, cf.descripcion as nombre_clase, p.costo, p.precio, um.corto, p.cantidad_caja "
                        + "from productos as p inner join unidad_medida as um on p.id_und_med = um.id_und_med inner join familia_productos as f on p.familia = f.id  inner join clasificacion_familia as cf "
                        + "on cf.id= p.clase_familia and cf.familia=p.familia where (p.codigo_externo like '%" + buscar + "%' or p.descripcion like '%" + buscar + "%' or p.caracteristicas like '%" + buscar + "%') and estado = '1' order by p.descripcion asc";
                pro.ver_todo_productos(t_productos, query);
                t_productos.requestFocus();
                contar_filas();
            }
        }
    }//GEN-LAST:event_txt_busKeyPressed

    private void contar_filas() {
        int nro_filas = t_productos.getRowCount();
        lbl_nro.setText(nro_filas + "");

    }
    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked

    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void btn_modActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modActionPerformed
//        if (frm_menu.usu.getPpr_mod().equals("0")) {
        frm_reg_productos prod = new frm_reg_productos();
        frm_reg_productos.tipo = tipo;
        frm_reg_productos.origen = "todo_productos";

        try {
            String query = "select p.descripcion, p.caracteristicas, p.codigo_externo, p.afecto_igv, p.cantidad_caja, p.familia, p.clase_familia, p.precio, p.id_und_med, p.costo from productos as p where p.id_producto = '" + pro.getId() + "'";
            Statement st = con.conexion();
            ResultSet rs = con.consulta(st, query);
            if (rs.next()) {
                frm_reg_productos.txt_des.setText(rs.getString("descripcion"));
                frm_reg_productos.txt_des.requestFocus();
                frm_reg_productos.txt_caract.setText(rs.getString("caracteristicas"));
                frm_reg_productos.txt_codigo_externo.setText(rs.getString("codigo_externo"));
                frm_reg_productos.cbx_familia.setSelectedIndex(rs.getInt("familia") - 1);
                cat.setId_familia(rs.getInt("familia"));
                cat.ver_categoria(frm_reg_productos.cbx_categoria);
                frm_reg_productos.cbx_categoria.setSelectedIndex(rs.getInt("clase_familia") - 1);
                frm_reg_productos.cbx_afecto.setSelectedIndex(rs.getInt("afecto_igv"));
                frm_reg_productos.cbx_und.setSelectedIndex(rs.getInt("id_und_med") - 1);
                frm_reg_productos.txt_cant_caja.setText(ven.formato_numero(rs.getDouble("cantidad_caja")));
                frm_reg_productos.txt_pven.setText(ven.formato_numero(rs.getDouble("precio")));
                frm_reg_productos.txt_pcom.setText(ven.formato_numero(rs.getDouble("costo")));
                frm_reg_productos.txt_caract.setEnabled(true);
                frm_reg_productos.txt_pven.setEnabled(true);
                frm_reg_productos.cbx_afecto.setEnabled(true);
                frm_reg_productos.cbx_categoria.setEnabled(true);
                frm_reg_productos.cbx_familia.setEnabled(true);
                frm_reg_productos.cbx_und.setEnabled(true);
                frm_reg_productos.txt_cant_caja.setEnabled(true);
                frm_reg_productos.btn_reg.setText("Modificar");
                frm_reg_productos.btn_reg.setEnabled(true);
                if (tipo.equals("bien")) {
                    //prod.txt_cant_min.setText("0.00");
                    //prod.txt_cant_min.setEnabled(true);
                    //prod.cbx_und.setSelectedIndex(rs.getInt("id_und_med") - 1);
                    //prod.cbx_und.setEnabled(true);
                    //prod.txt_pcom.setText("0.00");

                }
                prod.btn_reg.setEnabled(true);
                /*
                 try {
                 //cargar imagen 
                 ImagenURL Imagen = new ImagenURL();
                 String imgname = "";
                 imgname = rs.getString("imagen");
                 //JOptionPane.showMessageDialog(null, "el nombre de imagen es " + imgname);
                 System.out.println(imgname);
                 if (imgname == null || "".equals(imgname) || imgname.equals("null")) {
                 imgname = "noimage.jpg";
                 }
                 //JOptionPane.showMessageDialog(null, "el nuevo nombre de imagen es " + imgname);
                 prod.pro.setImg(imgname);
                 String url;
                 String server = "www.lunasystemsperu.com";
                 //String server = ven.leer_archivo("server.txt");
                 url = "http://" + server + "/farmapos/intifarma/imagenes/productos/" + imgname;
                 System.out.println(url + "\n");
                 Imagen.setlink(url);
                 prod.j_img.add(Imagen);
                 prod.j_img.repaint();
                 //fin de carga
                 } catch (Exception ex) {
                 JOptionPane.showMessageDialog(null, "Error al cargar imagen");
                 System.out.println(ex);
                 }
                 */
                prod.accion = "modificar";
                prod.id = pro.getId();
                ven.llamar_ventana(prod);
                this.dispose();
            }
        } catch (SQLException ex) {
            System.out.print(ex);
            JOptionPane.showMessageDialog(null, ex.getLocalizedMessage());
        }
        /*   } else {
         JOptionPane.showMessageDialog(null, "Ud. No tiene permisos");
         }
         */
    }//GEN-LAST:event_btn_modActionPerformed

    public class ImagenURL extends javax.swing.JPanel {

        String link;

        public ImagenURL() {
            this.setSize(200, 200); //se selecciona el tamaño del panel
        }

        public void paint(Graphics grafico) {
            Dimension height = getSize();
            URL url;
            ImageIcon Img = null;
            try {
                url = new URL(link);
                BufferedImage c = ImageIO.read(url);
                Img = new ImageIcon(c);
                grafico.drawImage(Img.getImage(), 0, 0, height.width, height.height, null);
                setOpaque(false);
                super.paintComponent(grafico);
            } catch (MalformedURLException ex) {
                System.out.print(ex);
            } catch (IOException ex) {
                System.out.print(ex);
//                JOptionPane.showMessageDialog(null, "no se puede mostrar la imagen \nerror con " + ex);
            }
//            grafico.drawImage(Img.getImage(), 0, 0, height.width, height.height, null);
//            setOpaque(false);
//            super.paintComponent(grafico);
        }

        public void setlink(String url) {
            link = url;
        }

        public String getlink() {
            return link;
        }
    }

    private void t_productosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_productosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_I) {
            int nro_filas = t_productos.getRowCount();
            if (nro_filas > -1) {
                i = t_productos.getSelectedRow();
                frm_ver_imagen_mini imagen = new frm_ver_imagen_mini();
                casa_biblia.frm_menu.jDesktopPane1.add(imagen);
                imagen.show();
                frm_ver_imagen_mini.cargar_imagen("noimage.png");
            } else {
                JOptionPane.showMessageDialog(null, "NO HAY FILAS");
                this.dispose();
            }
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            i = t_productos.getSelectedRow();
            int nro_filas = t_productos.getRowCount();
            if (nro_filas > -1) {
                pro.setId(Integer.parseInt(t_productos.getValueAt(i, 0).toString()));
                tipo = t_productos.getValueAt(i, 1).toString().toLowerCase();

            } else {
                JOptionPane.showMessageDialog(null, "NO HAY FILAS");
                this.dispose();
            }
            if (tipo.equals("bien")) {
                Object fila[];
                fila = new Object[8];
                fila[0] = t_productos.getValueAt(i, 0);  //COD PRO
                fila[1] = "-";
                fila[2] = t_productos.getValueAt(i, 2);  // DESCRIPCION
                fila[3] = "1.00";                        // CANTIDAD
                fila[4] = t_productos.getValueAt(i, 3); // UND MED

                //ENVIAR DATOS A FORMULARIO COMPRA
                if (origen.equals("ingreso")) {
                    boolean agregar = valida_tabla(Integer.parseInt(pro.getId() + ""));
                    if (agregar == true) {
                        Notification.show("Productos Generales", "Producto Seleccionado", Notification.NICON_LIGHT_THEME);
                        pro.setId(Integer.parseInt(t_productos.getValueAt(i, 0).toString()));
                        String fecha = ven.fechabase(frm_reg_ingreso.txt_fecha_compra.getText());
                        int id_moneda = frm_reg_ingreso.cbx_moneda.getSelectedIndex();
                        pro.setCosto(Double.parseDouble(t_productos.getValueAt(i, 7).toString()));
                        pro.setPrecio(Double.parseDouble(t_productos.getValueAt(i, 8).toString()));
                        if (id_moneda == 1 && pro.getCosto() > 0.0) {
                            double tc_compra = mon.cambio_compra_dolar(fecha, pro.getCosto());
                            pro.setCosto(tc_compra);
                        }
                        String descripcion, clase, familia;
                        descripcion = t_productos.getValueAt(i, 2).toString();
                        clase = t_productos.getValueAt(i, 4).toString();
                        familia = t_productos.getValueAt(i, 3).toString();
                        frm_reg_ingreso.txt_j_caracteristicas.setText(pro.ver_caracteristicas());
                        frm_reg_ingreso.txt_j_idproducto.setText(t_productos.getValueAt(i, 0).toString());     // COD PRO
                        frm_reg_ingreso.txt_j_descripcion.setText(descripcion + " - " + clase + " - " + familia);    // DESCRIPCION
                        frm_reg_ingreso.lbl_j_medida.setText(t_productos.getValueAt(i, 5).toString());   // UND MED
                        frm_reg_ingreso.txt_j_compra.setText(ven.formato_numero(pro.getCosto()));     // PRECIO COMPRA
                        frm_reg_ingreso.txt_j_venta.setText(ven.formato_numero(pro.getPrecio()));     // PRECIO VENTA
                        frm_reg_ingreso.txt_j_caja.setText(t_productos.getValueAt(i, 6).toString());
                        frm_reg_ingreso.txt_j_cantidad.setEnabled(true);
                        frm_reg_ingreso.txt_j_cantidad.selectAll();
                        frm_reg_ingreso.txt_j_cantidad.requestFocus();
                        this.dispose();
                        frm_reg_ingreso.add_productos();
                    } else {
                        JOptionPane.showMessageDialog(null, "EL PRODUCTO YA ESTA SELECCIONADO, NO SE PUEDE VOLVER A SELECIONAR");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "No se puede seleccionar un servicio");
            }
        }

        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txt_bus.setText("");
            txt_bus.requestFocus();
        }
    }//GEN-LAST:event_t_productosKeyPressed

    private boolean valida_tabla(int producto) {
        //estado de ingreso
        boolean ingresar = false;
        boolean validado = false;
        int cuenta_iguales = 0;

        //verificar fila no se repite
        int contar_filas = frm_reg_ingreso.t_detalle_ingreso.getRowCount();
        if (contar_filas == 0) {
            ingresar = true;
        }

        if (contar_filas > 0) {
            for (int j = 0; j < contar_filas; j++) {
                int id_producto_fila = Integer.parseInt(frm_reg_ingreso.t_detalle_ingreso.getValueAt(j, 0).toString());
                if (producto == id_producto_fila) {
                    ingresar = false;
                    cuenta_iguales++;
                    JOptionPane.showMessageDialog(null, "El Producto a Ingresar ya existe en la lista");
                } else {
                    ingresar = true;
                }
            }
        }

        if (ingresar == true && cuenta_iguales == 0) {
            validado = true;
        }
        return validado;
    }

    private void t_productosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t_productosMouseClicked
        i = t_productos.getSelectedRow();
        int nro_filas = t_productos.getRowCount();
        if (nro_filas > -1) {
            pro.setId(Integer.parseInt(t_productos.getValueAt(i, 0).toString()));
            tipo = t_productos.getValueAt(i, 1).toString().toLowerCase();

        } else {
            JOptionPane.showMessageDialog(null, "NO HAY FILAS");
            this.dispose();
        }
        btn_mod.setEnabled(true);
        btn_eliminar.setEnabled(true);

        if (evt.getClickCount() == 2) {
            if (tipo.equals("bien")) {
                Object fila[];
                fila = new Object[8];
                fila[0] = t_productos.getValueAt(i, 0);  //COD PRO
                fila[1] = "-";
                fila[2] = t_productos.getValueAt(i, 2);  // DESCRIPCION
                fila[3] = "1.00";                        // CANTIDAD
                fila[4] = t_productos.getValueAt(i, 3); // UND MED

                //ENVIAR DATOS A FORMULARIO COMPRA
                if (origen.equals("ingreso")) {
                    Notification.show("Productos Generales", "Producto Seleccionado", Notification.NICON_LIGHT_THEME);
                    pro.setId(Integer.parseInt(t_productos.getValueAt(i, 0).toString()));
                    String fecha = ven.fechabase(frm_reg_ingreso.txt_fecha_compra.getText());
                    int id_moneda = frm_reg_ingreso.cbx_moneda.getSelectedIndex();
                    pro.setCosto(Double.parseDouble(t_productos.getValueAt(i, 7).toString()));
                    pro.setPrecio(Double.parseDouble(t_productos.getValueAt(i, 8).toString()));
                    if (id_moneda == 1 && pro.getCosto() > 0.0) {
                        double tc_compra = mon.cambio_compra_dolar(fecha, pro.getCosto());
                        pro.setCosto(tc_compra);
                    }
                    String descripcion, clase, familia;
                    descripcion = t_productos.getValueAt(i, 2).toString();
                    clase = t_productos.getValueAt(i, 4).toString();
                    familia = t_productos.getValueAt(i, 3).toString();
                    frm_reg_ingreso.txt_j_descripcion.setEnabled(false);
                    frm_reg_ingreso.txt_j_caracteristicas.setText(pro.ver_caracteristicas());
                    frm_reg_ingreso.txt_j_idproducto.setText(t_productos.getValueAt(i, 0).toString());     // COD PRO
                    frm_reg_ingreso.txt_j_descripcion.setText(descripcion + " - " + clase + " - " + familia);    // DESCRIPCION
                    frm_reg_ingreso.lbl_j_medida.setText(t_productos.getValueAt(i, 5).toString());   // UND MED
                    frm_reg_ingreso.txt_j_compra.setText(ven.formato_numero(pro.getCosto()));     // PRECIO COMPRA
                    frm_reg_ingreso.txt_j_venta.setText(ven.formato_numero(pro.getPrecio()));     // PRECIO VENTA
                    frm_reg_ingreso.txt_j_caja.setText(t_productos.getValueAt(i, 6).toString());
                    frm_reg_ingreso.txt_j_cantidad.setEnabled(true);
                    frm_reg_ingreso.txt_j_cantidad.selectAll();
                    frm_reg_ingreso.txt_j_cantidad.requestFocus();
                    frm_reg_ingreso.add_productos();
                    this.dispose();

                }
            } else {
                Notification.show("Productos Generales", "No se puede seleccionar un servicio", Notification.NICON_LIGHT_THEME);
            }
        }

    }//GEN-LAST:event_t_productosMouseClicked

    private void txt_busFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_busFocusGained
        lbl_ayuda.setText("F1 - limpiar busqueda.           Enter: ejecutar busqueda                F3: Crear Producto");
    }//GEN-LAST:event_txt_busFocusGained

    private void t_productosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_productosFocusGained
        lbl_ayuda.setText("FLECHAS ARRIBA Y ABAJO: mover entre la tabla                   ENTER: seleccionar fila");
    }//GEN-LAST:event_t_productosFocusGained

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        //eliminar
        int confirmado = JOptionPane.showConfirmDialog(null, "¿Confirma eliminar el producto?");

        if (JOptionPane.OK_OPTION == confirmado) {

            try {
                Statement st = con.conexion();
                String query = "update productos set estado = '0' where id_producto ='" + pro.getId() + "'";
                con.actualiza(st, query);
                con.cerrar(st);
            } catch (Exception ex) {
                System.out.print(ex);
                JOptionPane.showMessageDialog(null, ex.getLocalizedMessage());
            }
            
            String buscar = txt_bus.getText();
            String query = "select p.id_producto, p.codigo_externo, p.descripcion, p.tipo_producto, f.descripcion as nombre_familia, cf.descripcion as nombre_clase, p.costo, p.precio, um.corto, p.cantidad_caja "
                    + "from productos as p inner join unidad_medida as um on p.id_und_med = um.id_und_med inner join familia_productos as f on p.familia = f.id  inner join clasificacion_familia as cf "
                    + "on cf.id= p.clase_familia and cf.familia=p.familia where (p.codigo_externo like '%" + buscar + "%' or p.descripcion like '%" + buscar + "%' or p.caracteristicas like '%" + buscar + "%') and estado = '1' order by p.descripcion asc";
            pro.ver_todo_productos(t_productos, query);
            t_productos.requestFocus();
            contar_filas();
        }
        btn_eliminar.setEnabled(false);
        btn_mod.setEnabled(false);
    }//GEN-LAST:event_btn_eliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cerrar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_mod;
    private javax.swing.JButton btn_registrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_ayuda;
    private javax.swing.JLabel lbl_nro;
    public static javax.swing.JTable t_productos;
    private javax.swing.JTextField txt_bus;
    // End of variables declaration//GEN-END:variables
}
